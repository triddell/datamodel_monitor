[Datamodel Monitor]
action.html-email = 1
action.html-email.param.alert = 0
action.html-email.param.csv = 0
action.html-email.param.description = This alert is created when events for specific monitored datamodels are not present in Splunk after a certain period of time.
action.html-email.param.description_include = 1
action.html-email.param.results = 0
action.html-email.param.smtp_to = $result.to$
action.html-email.param.source = source_markdown
action.html-email.param.table = 0
action.html-email.param.title = Alert: Datamodel Monitor
alert.digest_mode = 0
alert.suppress = 1
alert.suppress.fields = to,suppressfield
alert.suppress.period = 2h
alert.track = 0
counttype = number of events
cron_schedule = */30 * * * *
description = This alert is created when events for specific monitored datamodels are not present in Splunk after a certain period of time.
disabled = 1
dispatch.earliest_time = -3d
dispatch.latest_time = now
enableSched = 1
quantity = 0
relation = greater than
search = | tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Alerts BY Alerts.app \
| rename Alerts.app AS field_value \
| eval model="Alerts" \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Authentication BY Authentication.app \
    | rename Authentication.app AS field_value \
    | eval model="Authentication" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Change BY All_Changes.vendor_product \
    | rename All_Changes.vendor_product AS field_value \
    | eval model="Change" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Email BY All_Email.vendor_product \
    | rename All_Email.vendor_product AS field_value \
    | eval model="Email" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=JVM BY JVM.vendor_product \
    | rename JVM.vendor_product AS field_value \
    | eval model="JVM" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Malware BY Malware_Operations.vendor_product \
    | rename Malware_Operations.vendor_product AS field_value \
    | eval model="Malware" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Network_Resolution BY DNS.vendor_product \
    | rename DNS.vendor_product AS field_value \
    | eval model="Network Resolution" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Network_Sessions BY All_Sessions.vendor_product \
    | rename All_Sessions.vendor_product AS field_value \
    | eval model="Network Sessions" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Network_Traffic WHERE earliest=-1d BY All_Traffic.vendor_product \
    | rename All_Traffic.vendor_product AS field_value \
    | eval model="Network Traffic" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Updates BY Updates.vendor_product \
    | rename Updates.vendor_product AS field_value \
    | eval model="Updates" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Vulnerabilities BY Vulnerabilities.vendor_product \
    | rename Vulnerabilities.vendor_product AS field_value \
    | eval model="Vulnerabilities" ] \
| append \
    [| tstats summariesonly=true, allow_old_summaries=true latest(_time) FROM datamodel=Web BY Web.app \
    | rename Web.app AS field_value \
    | eval model="Web" ] \
| typer \
| stats max(lastTime) as lastTime list(eventtype) as eventtype by datamodel, key_value \
| lookup sourcetype_monitor datamodel,key_value OUTPUT \
| search comments=* \
| eval to=if(contact="",null(),contact) \
| eval lateSecs=mvindex(lateSecs,0) \
| eval lateSecs=if(suppressUntil > now(),0,lateSecs) \
| eval lastAllowed=round(coalesce(relative_time(now(), lateSecs),now()-lateSecs),0) \
| where lateSecs != "0" AND (lastTime < lastAllowed) \
| eval howLateSecs=now() - lastTime \
| eval howLate=if(howLateSecs<0,"-".tostring(abs(howLateSecs),"duration"),tostring(howLateSecs,"duration")) \
| rex field=howLate mode=sed "s/\+/ days /" \
| rex field=howLate mode=sed "s/^1 days/1 day /" \
| sort lastTime \
| eval Last=strftime(lastTime, "%D %H:%M:%S") \
| eval message="| ".datamodel." | ".key_value." | ".Last." | ".howLate." |" \
| eval suppressfield=datatmodel.", ".key_value \
| stats list(message) as body, list(suppressfield) as suppressfield by to \
| eval body=mvappend("| :---: | :--------: | :-------------: | :-------------------: |",body) \
| eval body=mvappend("| Datamodel | Key Value | Last Event Time | Time Since Last Event |",body)
